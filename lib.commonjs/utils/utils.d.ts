import { UnknownPostOrEvent, UnknownEvent, NostrSpasmEvent, NostrSpasmEventSignedOpened, NostrSpasmVersion, LinkObject, SpasmEventIdFormatV2, SpasmEventAddressFormatV2, SpasmEventSignatureFormatV2, SpasmEventV2, SpasmEventAuthorV2, SpasmEventBodyHostV2, SpasmEventMediaV2, SpasmEventIdV2, SpasmEventBodyReferenceV2, SpasmEventBodyParentV2, ConvertToSpasmConfig, CustomConvertToSpasmConfig, CustomSanitizationConfig, SanitizationConfig, UnknownEventV2, SpasmEventStatV2, SpasmEventChildV2, SpasmEventAddressFormatNameV2, NostrEventSignedOpened, NostrEvent, SpasmEventIdFormatNameV2 } from "./../types/interfaces.js";
export declare const hasValue: (el?: any) => boolean;
export declare const isStringOrNumber: (val: any) => boolean;
export declare const isNumberOrString: (val: any) => boolean;
export declare const ifStringOrNumber: (val: any) => boolean;
export declare const ifNumberOrString: (val: any) => boolean;
export declare const isObjectWithValues: (val: any) => boolean;
export declare const isArrayWithValues: (array: any) => boolean;
export declare const isArrayOfStrings: (array: any) => boolean;
export declare const isArrayOfNumbers: (array: any) => boolean;
export declare const isArrayOfStringsOrNumbers: (array: any) => boolean;
export declare const isArrayOfNumbersOrStrings: (array: any) => boolean;
export declare const extractVersion: (versionString: string) => string;
export declare const extractSealedEvent: (unknownPostOrEvent: UnknownPostOrEvent) => UnknownEvent | false;
/**
 * Converts value to a consistent timestamp across all platforms.
 * Input time value can be string, number, or Date object.
 * returns Consistent timestamp in milliseconds or undefined.
 */
export declare const toBeTimestamp: (originalTime: any) => number | undefined;
export declare const toBeShortTimestamp: (value: string | number) => number | undefined;
export declare const toBeLongTimestamp: (value: string | number) => number | null;
export declare const toBeFullTimestamp: (value: string | number) => number | null;
export declare const toBeStandardizedTimestamp: (value: string | number) => number | undefined;
export declare const toBeStandardTimestamp: (value: string | number) => number | undefined;
export declare const toBeNostrTimestamp: (value: string | number) => number | undefined;
export declare const getNostrSpasmVersion: (event: NostrSpasmEvent | NostrSpasmEventSignedOpened) => NostrSpasmVersion | null;
export declare const isValidUrl: (value?: any) => boolean;
export declare const createLinkObjectFromUrl: (url: any, key?: any) => LinkObject | null;
export declare const getFormatFromValue: (value?: string | number) => SpasmEventIdFormatV2 | SpasmEventSignatureFormatV2 | null;
export declare const getFormatFromId: (id: string | number) => SpasmEventIdFormatV2 | null;
export declare const getFormatFromAddress: (address: string | number) => SpasmEventAddressFormatV2 | null;
export declare const getFormatFromSignature: (address: string | number) => SpasmEventSignatureFormatV2 | null;
export declare const extractIdFormatNameFromSpasmEventIdV2: (id: SpasmEventIdV2) => SpasmEventIdFormatNameV2 | null;
export declare const extractAllIdFormatNamesFromSpasmEventV2: (originalEvent: SpasmEventV2) => (SpasmEventIdFormatNameV2)[] | null;
export declare const getAllFormatNamesFromSpasmEventV2: (originalEvent: SpasmEventV2) => (SpasmEventIdFormatNameV2)[] | null;
export declare const getAllFormatNamesFromEvent: (originalEvent: SpasmEventV2) => (SpasmEventIdFormatNameV2)[] | null;
export declare const getHashOfString: (string: string, algorithm?: string) => string;
export declare const keepTheseKeysInObject: (obj: Record<string, any>, keys: string[]) => Partial<Record<string, any>> | null;
export declare const keepTheseKeysInObjectsInArray: (array: Record<string, any>[], keys: string[]) => Partial<(Record<string, any> | null)[]> | null;
export declare const sortArrayOfStringsAndNumbers: (array: any[]) => any[] | null;
export declare const sortArrayOfObjects: (objects: any[], sortBy?: string | string[]) => any[];
export declare const sortAuthorsForSpasmEventV2: (authors: SpasmEventAuthorV2[]) => SpasmEventAuthorV2[];
export declare const sortAuthorsForSpasmid01: (authors: SpasmEventAuthorV2[]) => SpasmEventAuthorV2[];
export declare const sortArrayOfObjectsByKeyValue: (objects: SpasmEventAuthorV2[] | SpasmEventMediaV2[], key: string) => any[];
export declare const sortHostsForSpasmEventV2: (hosts: SpasmEventBodyHostV2[]) => SpasmEventBodyHostV2[];
export declare const sortHostsForSpasmid01: (hosts: SpasmEventBodyHostV2[]) => SpasmEventBodyHostV2[];
export declare const sortLinksForSpasmEventV2: (hosts: SpasmEventBodyHostV2[]) => SpasmEventBodyHostV2[];
export declare const sortLinksForSpasmid01: (hosts: SpasmEventBodyHostV2[]) => SpasmEventBodyHostV2[];
export declare const sortMediasForSpasmid01: (medias: any) => SpasmEventMediaV2[];
export declare const sortReferencesForSpasmid01: (references: SpasmEventBodyReferenceV2[]) => SpasmEventBodyReferenceV2[];
export declare const sortParentForSpasmid01: (parent: SpasmEventBodyParentV2) => SpasmEventBodyParentV2;
export declare const sortTagsForSpasmid01: (tags: any[][]) => any[][];
export declare const markSpasmEventAddressAsVerified: (spasmEvent: SpasmEventV2, verifiedAddress: string | number, version?: string) => void;
export declare const verifyEthereumSignature: (messageString: string, signature: string, signerAddress: string) => boolean;
export declare const utilsStatus: () => void;
export declare const executeFunctionForAllNestedValuesOfType: (originalItem: Object | any[], customConfig?: CustomSanitizationConfig) => void;
export declare const sanitizeEventWith: (originalItem: Object | any[], config?: CustomSanitizationConfig) => void;
export declare const sanitizeStringWithDompurify: (val: any) => any;
export declare const sanitizeEventWithDompurify: (originalItem: Object | any[], config?: CustomSanitizationConfig) => void;
export declare const sanitizeEvent: (originalItem: Object | any[], config?: CustomSanitizationConfig) => void;
export declare const sanitizeArray: (originalItem: Object | any[], config?: CustomSanitizationConfig) => void;
export declare const sanitizeAnything: (originalItem: Object | any[], config?: CustomSanitizationConfig) => void;
export declare const clearArray: (arr: any[]) => void;
export declare const clearObject: (obj: Record<string, any>) => void;
type MergeObjectsHandleArrays = "overwriteArrays" | "mergeArrays";
export declare const mergeObjects: (defaultObject: Object, customObject: Object, handleArrays?: MergeObjectsHandleArrays, depth?: number) => Object;
export declare const mergeConfigs: (defaultConfig: ConvertToSpasmConfig, customConfig: CustomConvertToSpasmConfig, handleArrays?: MergeObjectsHandleArrays) => ConvertToSpasmConfig;
export declare const mergeSanitizationConfigs: (defaultConfig: SanitizationConfig, customConfig: CustomSanitizationConfig, handleArrays?: MergeObjectsHandleArrays) => SanitizationConfig;
export declare const hasSignatureOfFormat: (spasmEvent: SpasmEventV2, signatureFormat: "ethereum" | "nostr") => boolean;
export declare const hasSignatureEthereum: (spasmEvent: SpasmEventV2) => boolean;
export declare const hasSignatureNostr: (spasmEvent: SpasmEventV2) => boolean;
export declare const extractNostrEvent: (spasmEvent: SpasmEventV2, onlySigned?: boolean) => NostrEvent | NostrEventSignedOpened | NostrSpasmEvent | NostrSpasmEventSignedOpened | null;
export declare const extractSignedNostrEvent: (spasmEvent: SpasmEventV2) => NostrEvent | NostrEventSignedOpened | NostrSpasmEvent | NostrSpasmEventSignedOpened | null;
export declare const extractSignedNostrEvents: (spasmEvent: SpasmEventV2) => (NostrEvent | NostrEventSignedOpened | NostrSpasmEvent | NostrSpasmEventSignedOpened)[] | null;
export declare const extractNostrEvents: (unknownEvent: UnknownEventV2, onlySigned?: boolean) => (NostrEvent | NostrEventSignedOpened | NostrSpasmEvent | NostrSpasmEventSignedOpened)[] | null;
export declare const hasSiblingOfProtocol: (spasmEvent: SpasmEventV2, eventProtocol: "spasm" | "dmp" | "nostr" | "web2") => boolean;
export declare const hasSiblingSpasm: (spasmEvent: SpasmEventV2) => boolean;
export declare const hasSiblingDmp: (spasmEvent: SpasmEventV2) => boolean;
export declare const hasSiblingNostr: (spasmEvent: SpasmEventV2) => boolean;
export declare const hasSiblingWeb2: (spasmEvent: SpasmEventV2) => boolean;
export declare const getAllSigners: (unknownEvent: UnknownEventV2, onlyVerifiedFlag?: boolean, toLowerCase?: boolean, formatName?: SpasmEventAddressFormatNameV2 | "nostr" | "ethereum" | "spasm") => (string | number)[];
export declare const getAllSpasmSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getAllEthereumSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getAllNostrSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getVerifiedSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getVerifiedSpasmSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getVerifiedEthereumSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getVerifiedNostrSigners: (unknownEvent: UnknownEventV2) => (string | number)[];
export declare const getAllIdsFromArrayOfIdObjects: (arrayOfIdObjects: SpasmEventIdV2[], toLowerCase?: boolean) => (string | number)[];
export declare const getAllEventIds: (unknownEvent: UnknownEventV2, toLowerCase?: boolean) => (string | number)[];
export declare const getAllParentIds: (unknownEvent: UnknownEventV2, toLowerCase?: boolean) => (string | number)[];
export declare const getAllRootIds: (unknownEvent: UnknownEventV2, toLowerCase?: boolean) => (string | number)[];
export declare const getAllSignatures: (unknownEvent: UnknownEventV2, toLowerCase?: boolean) => (string | number)[];
export declare const getSignersListedIn: (unknownEvent: UnknownEventV2, originaList: (string | number)[]) => (string | number)[];
export declare const getPubkeysListedIn: (unknownEvent: UnknownEventV2, originaList: (string | number)[]) => (string | number)[];
export declare const getStatByAction: (unknownEvent: any, action?: string | number) => SpasmEventStatV2 | null;
export declare const getTotalOfReaction: (unknownEvent: any, reaction?: string | number) => number;
export declare const getTotalOfMostPopularReaction: (unknownEvent: any) => number;
export declare const getTotalOfAction: (unknownEvent: any, action?: string | number) => number;
export declare const getTotalOfReply: (unknownEvent: any) => number;
export declare const getTotalOfReplyAction: (unknownEvent: any) => number;
export declare const getTotalOfActionReply: (unknownEvent: any) => number;
export declare const getTotalOfReact: (unknownEvent: any) => number;
export declare const getTotalOfReactAction: (unknownEvent: any) => number;
export declare const getTotalOfActionReact: (unknownEvent: any) => number;
export declare const isAnySignerListedIn: (unknownEvent: UnknownEventV2, list: (string | number)[]) => boolean;
export declare const isAnyPubkeyListedIn: (unknownEvent: UnknownEventV2, list: (string | number)[]) => boolean;
export declare const areAllSignersListedIn: (unknownEvent: UnknownEventV2, list: (string | number)[]) => boolean;
export declare const areAllPubkeysListedIn: (unknownEvent: UnknownEventV2, list: (string | number)[]) => boolean;
export declare const getIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2, from?: "event" | "parent" | "root") => string | number | null;
export declare const findMostLikelyUrl: (arr: (string | number)[]) => string | null;
export declare const findMostLikelyGuid: (arr: string[]) => string | null;
export declare const extractIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2, from?: "event" | "parent" | "root") => string | number | null;
export declare const extractSpasmId01: (unknownEvent: UnknownEventV2) => string | number;
export declare const getParentIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2) => string | number | null;
export declare const extractParentIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2) => string | number | null;
export declare const extractParentSpasmId01: (unknownEvent: UnknownEventV2) => string | number;
export declare const getRootIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2) => string | number | null;
export declare const extractRootIdByFormat: (unknownEvent: UnknownEventV2, customIdFormat?: SpasmEventIdFormatV2) => string | number | null;
export declare const extractRootSpasmId01: (unknownEvent: UnknownEventV2) => string | number;
export declare const removeDuplicatesFromArray: (array: (string | number)[]) => (string | number)[];
export declare const removeDuplicatesFromArrayOfStrings: (array: string[]) => string[];
export declare const checkIfEventHasThisId: (unknownEvent: UnknownEventV2, id: (string | number), shortIdLength?: number) => Boolean;
export declare const getEventById: (unknownEvents: UnknownEventV2[], id: (string | number), shortIdLength?: number) => SpasmEventV2 | null;
export declare const getEventsByIds: (unknownEvents: UnknownEventV2[], ids: (string | number)[], shortIdLength?: number) => SpasmEventV2[] | null;
export declare const toBeSpasmEventV2: (unknownEvent: UnknownEventV2) => SpasmEventV2 | null;
export declare const toBeSpasmEventsV2: (unknownEvents: any[]) => SpasmEventV2[] | null;
export declare const extractSignerFromEthereumSignature: (signedString: string, signature: string) => string | null;
export declare const mergeSpasmEventsV2: (spasmEvents: any[], depth?: number) => SpasmEventV2 | null;
export declare const mergeDifferentSpasmEventsV2: (unknownEvents: any[], depth?: number) => SpasmEventV2[] | null;
export declare const checkIfArrayHasThisSpasmEventV2: (array: UnknownEventV2[], event: UnknownEventV2) => boolean;
export declare const checkIfArrayHasThisEvent: (array: UnknownEventV2[], event: UnknownEventV2) => boolean;
export declare const mergeEventIntoArray: (array: UnknownEventV2[], event: UnknownEventV2) => void;
export declare const insertIntoArrayIfEventIsUnique: (array: UnknownEventV2[], originalEvent: UnknownEventV2, method?: "unshift" | "push", ifMergeWhenAvailable?: boolean, ifConvertToSpasm?: boolean, convertToSpasmVersion?: "2.0.0") => void;
export declare const pushToArrayIfEventIsUnique: (array: SpasmEventV2[], event: SpasmEventV2, ifMergeWhenAvailable?: boolean, ifConvertToSpasm?: boolean, convertToSpasmVersion?: "2.0.0") => void;
export declare const appendToArrayIfEventIsUnique: (array: SpasmEventV2[], event: SpasmEventV2, ifMergeWhenAvailable?: boolean, ifConvertToSpasm?: boolean, convertToSpasmVersion?: "2.0.0") => void;
export declare const unshiftToArrayIfEventIsUnique: (array: SpasmEventV2[], event: SpasmEventV2, ifMergeWhenAvailable?: boolean, ifConvertToSpasm?: boolean, convertToSpasmVersion?: "2.0.0") => void;
export declare const prependToArrayIfEventIsUnique: (array: SpasmEventV2[], event: SpasmEventV2, ifMergeWhenAvailable?: boolean, ifConvertToSpasm?: boolean, convertToSpasmVersion?: "2.0.0") => void;
export declare const sortSpasmEventsV2ByDbAddedTimestamp: (unknownEvents: any[], order?: "asc" | "desc") => SpasmEventV2[] | null;
export declare const sortSpasmEventsV2: (unknownEvents: any[], order?: "asc" | "desc") => SpasmEventV2[] | null;
export declare const ifEventsHaveSameSpasmId01: (event1: UnknownEventV2, event2: UnknownEventV2) => Boolean;
export declare const deepCopyOfObject: (obj: any) => any;
export declare const copyOf: (obj: any) => any;
export declare const fakeAsString: (val: any) => string;
export declare const fakeAsNumber: (val: any) => number;
export declare const fakeAsArray: (val: any) => any[];
export declare const fakeAsNull: (val: any) => null;
export declare const fakeAsAny: (val: any) => any;
export declare const fakeAsObject: (val: any) => Record<any, any>;
export declare const cleanSpasmEventV2: (spasmEvent: SpasmEventV2) => void;
export declare const mergeStatsV2: (allStats: SpasmEventStatV2[][]) => SpasmEventStatV2[] | null;
export declare const mergeChildrenV2: (allChildren: SpasmEventChildV2[][], depth?: number) => SpasmEventChildV2[] | null;
export declare const addEventsToTree: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addParentToTree: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addParentToEvent: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addRootToTree: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addRootToEvent: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addChildrenToTree: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addCommentsToEvent: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const addRepliesToEvent: (unknownEvent: UnknownEventV2, unknownEvents: UnknownEventV2[], maxDepth?: number, ifRecursively?: boolean, depth?: number, destination?: "any" | "up" | "down", ifMerge?: boolean) => SpasmEventV2 | null;
export declare const ifArraysHaveCommonId: (array1: (string | number)[], array2: (string | number)[]) => boolean;
export declare const attachEventAsChild: (unknownMainEvent: UnknownEventV2, unknownChildEvent: UnknownEventV2) => SpasmEventV2 | null;
export declare const attachEventAsRoot: (unknownMainEvent: UnknownEventV2, unknownRootEvent: UnknownEventV2) => SpasmEventV2 | null;
export declare const attachEventAsParent: (unknownMainEvent: UnknownEventV2, unknownParentEvent: UnknownEventV2) => SpasmEventV2 | null;
export declare const assignFormats: (event: SpasmEventV2) => void;
export declare const isHex: (value: any) => boolean;
export declare const isNostrHex: (value: any) => boolean;
export declare const normalizeText: (val: string) => string;
export declare const removeNbsp: (val: string) => string;
export {};
//# sourceMappingURL=utils.d.ts.map